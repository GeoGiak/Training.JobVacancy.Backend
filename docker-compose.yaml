name: JobVacancy

services:
  backend:
    image: training.jobvacancy.web.server
    build:
      context: .
      dockerfile: src/Training.JobVacancy.Web.Server/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__JobVacancyDatabase=Host=postgres;Port=5432;Database=jobvacancy;Username=jobvacancy;Password=example123
      - Redis__Configuration=redis:6379

  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: jobvacancy
      POSTGRES_PASSWORD: example123
      POSTGRES_DB: jobvacancy
      POSTGRES_INITDB_ARGS: --data-checksums --encoding=UTF8
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=jobvacancy"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 5s
      timeout: 5s
      retries: 5



